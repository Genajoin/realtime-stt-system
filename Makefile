# Makefile –¥–ª—è Realtime STT System
# –ö–ª–∏–µ–Ω—Ç-—Å–µ—Ä–≤–µ—Ä–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —á–µ—Ä–µ–∑ WebSocket

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON := python3

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED := \033[0;31m
GREEN := \033[0;32m
YELLOW := \033[0;33m
BLUE := \033[0;34m
NC := \033[0m # No Color

.PHONY: help run-minimal-editor docker-build docker-run docker-stop docker-logs docker-status deploy remote-logs remote-status clean

# –ü–æ–º–æ—â—å (–∫–æ–º–∞–Ω–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
help:
	@echo "$(BLUE)‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó$(NC)"
	@echo "$(BLUE)‚ïë          Realtime STT System Commands         ‚ïë$(NC)"
	@echo "$(BLUE)‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù$(NC)"
	@echo ""
	@echo "$(GREEN)–ö–ª–∏–µ–Ω—Ç –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@echo "  $(YELLOW)make run-minimal-editor$(NC)       - –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π STT —Ä–µ–¥–∞–∫—Ç–æ—Ä –±–µ–∑ —Ä–∞–º–æ–∫"
	@echo ""
	@echo "$(GREEN)Docker –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@echo "  $(YELLOW)make docker-build$(NC)         - –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞"
	@echo "  $(YELLOW)make docker-run$(NC)           - –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
	@echo "  $(YELLOW)make docker-stop$(NC)          - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
	@echo "  $(YELLOW)make docker-logs$(NC)          - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
	@echo "  $(YELLOW)make docker-status$(NC)        - –°—Ç–∞—Ç—É—Å –∏ —Ä–µ—Å—É—Ä—Å—ã"
	@echo ""
	@echo "$(GREEN)–£–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä:$(NC)"
	@echo "  $(YELLOW)make deploy$(NC)               - –î–µ–ø–ª–æ–π –Ω–∞ genaminipc.awg"
	@echo "  $(YELLOW)make remote-logs$(NC)          - –õ–æ–≥–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞"
	@echo "  $(YELLOW)make remote-status$(NC)        - –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"
	@echo ""
	@echo "$(GREEN)–£—Ç–∏–ª–∏—Ç—ã:$(NC)"
	@echo "  $(YELLOW)make clean$(NC)                - –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –ö–ª–∏–µ–Ω—Ç –∫–æ–º–∞–Ω–¥—ã
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

run-minimal-editor:
	@echo "$(GREEN)‚úèÔ∏è  –ó–∞–ø—É—Å–∫ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ STT —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...$(NC)"
	@echo "$(BLUE)üìù –¢–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –≤ —Å—Ç–∏–ª–µ mcedit –ë–ï–ó —Ä–∞–º–æ–∫$(NC)"
	@echo "$(BLUE)üé§ F1 - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∑–∞–ø–∏—Å—å STT, –∞–≤—Ç–æ–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ –≤—ã–¥–µ–ª–µ–Ω–∏–∏ –º—ã—à—å—é$(NC)"
	@echo "$(BLUE)üåê –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ .env —Ñ–∞–π–ª–∞$(NC)"
	@$(PYTHON) websocket_minimal_editor.py

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# Docker –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

docker-build:
	@echo "$(BLUE)üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ —Å GPU –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π...$(NC)"
	docker compose build

docker-run:
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...$(NC)"
	docker compose up -d
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç–∞—Ö 8011 (control) –∏ 8012 (data)$(NC)"

docker-stop:
	@echo "$(YELLOW)‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...$(NC)"
	docker compose down

docker-restart: docker-stop docker-run
	@echo "$(GREEN)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω$(NC)"

docker-logs:
	@echo "$(BLUE)üìã –õ–æ–≥–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:$(NC)"
	docker compose logs -f

docker-status:
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:$(NC)"
	docker compose ps
	@echo ""
	@echo "$(BLUE)üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:$(NC)"
	docker stats --no-stream

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

deploy:
	@echo "$(BLUE)üåê –î–µ–ø–ª–æ–π –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä...$(NC)"
	git push origin master
	ssh genaminipc.awg "cd ~/dev/realtime-stt-system && git pull && docker compose down && docker compose up --build -d"
	@echo "$(GREEN)‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω$(NC)"

remote-logs:
	@echo "$(BLUE)üìã –õ–æ–≥–∏ —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:$(NC)"
	ssh genaminipc.awg "cd ~/dev/realtime-stt-system && docker compose logs -f"

remote-status:
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ:$(NC)"
	ssh genaminipc.awg "cd ~/dev/realtime-stt-system && docker compose ps && echo && docker stats --no-stream"

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –£—Ç–∏–ª–∏—Ç—ã
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

clean:
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
	find . -type f -name "*.log" -delete 2>/dev/null || true
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–µ–∫—Ç –æ—á–∏—â–µ–Ω$(NC)"

test-connection:
	@echo "$(BLUE)üîå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É...$(NC)"
	@timeout 5 bash -c "echo > /dev/tcp/genaminipc.awg/8011" && echo "$(GREEN)‚úÖ –ü–æ—Ä—Ç 8011 –¥–æ—Å—Ç—É–ø–µ–Ω$(NC)" || echo "$(RED)‚ùå –ü–æ—Ä—Ç 8011 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@timeout 5 bash -c "echo > /dev/tcp/genaminipc.awg/8012" && echo "$(GREEN)‚úÖ –ü–æ—Ä—Ç 8012 –¥–æ—Å—Ç—É–ø–µ–Ω$(NC)" || echo "$(RED)‚ùå –ü–æ—Ä—Ç 8012 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

# –ö–æ–º–∞–Ω–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.DEFAULT_GOAL := help

docker-build-no-cache:
	@echo "$(YELLOW)üê≥ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –±–µ–∑ –∫–µ—à–∞ (–º–µ–¥–ª–µ–Ω–Ω–æ!)...$(NC)"
	docker compose build --no-cache --progress=plain

