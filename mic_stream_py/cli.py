#!/usr/bin/env python3
"""
CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è Mic Stream Py

–ú–æ–¥—É–ª—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏:
- mic-stream: –æ—Å–Ω–æ–≤–Ω–æ–π CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
- stt-client: —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç
"""

import argparse
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π
try:
    from mic_stream_py.client.minimal_editor import main as minimal_editor_main
except ImportError:
    minimal_editor_main = None


def create_parser() -> argparse.ArgumentParser:
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞—Ä—Å–µ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏"""
    parser = argparse.ArgumentParser(
        prog="mic-stream",
        description="Real-time Speech-to-Text Client CLI",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  mic-stream                          # –ó–∞–ø—É—Å–∫ —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
  mic-stream --server 192.168.1.100   # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É
        """
    )
    
    parser.add_argument(
        '--server',
        default='localhost',
        help='–•–æ—Å—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: localhost)'
    )
    parser.add_argument(
        '--control-port',
        type=int,
        default=8011,
        help='–ü–æ—Ä—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 8011)'
    )
    parser.add_argument(
        '--data-port',
        type=int,
        default=8012,
        help='–ü–æ—Ä—Ç –¥–ª—è –¥–∞–Ω–Ω—ã—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 8012)'
    )
    parser.add_argument(
        '--test',
        action='store_true',
        help='–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º'
    )
    
    return parser


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è mic-stream –∫–æ–º–∞–Ω–¥—ã"""
    parser = create_parser()
    args = parser.parse_args()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
    main_client(args)


def load_env_file(env_file):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞"""
    if os.path.exists(env_file):
        print(f"–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑: {env_file}")
        with open(env_file, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#'):
                    if '=' in line:
                        key, value = line.split('=', 1)
                        os.environ[key.strip()] = value.strip()
                        print(f"  {key.strip()}={value.strip()}")
    else:
        print(f"–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {env_file}")
        print("–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")

def main_client(args):
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è stt-client –∫–æ–º–∞–Ω–¥—ã"""
    # –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
    env_file = os.path.join(os.path.dirname(__file__), "..", ".env")
    load_env_file(env_file)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    os.environ['SERVER_HOST'] = args.server
    os.environ['CONTROL_PORT'] = str(args.control_port)
    os.environ['DATA_PORT'] = str(args.data_port)
    
    print(f"üé§ –ó–∞–ø—É—Å–∫ STT –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è {args.server}:{args.control_port}")
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ --test)
    original_args = []
    if args.test:
        original_args.append('--test')
    
    # –ó–∞–º–µ–Ω—è–µ–º sys.argv –¥–ª—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    sys.argv = ['stt-client'] + original_args
    
    if minimal_editor_main is None:
        print("‚ùå –ú–æ–¥—É–ª—å –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -e .")
        sys.exit(1)
    
    # –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é main —Ñ—É–Ω–∫—Ü–∏—é (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é)
    import asyncio
    asyncio.run(minimal_editor_main())


# –§—É–Ω–∫—Ü–∏—è main_gui —É–¥–∞–ª–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ GUI –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ—Ç –≤ –ø—Ä–æ–µ–∫—Ç–µ


# –§—É–Ω–∫—Ü–∏—è main_server —É–¥–∞–ª–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ CLI –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è


if __name__ == '__main__':
    main()